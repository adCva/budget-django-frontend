{"version":3,"file":"static/js/460.76d15c74.chunk.js","mappings":"4LAgEA,UA3DA,WACI,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,GAAE,eAA9BC,EAAK,KAAEC,EAAQ,KACtB,GAAkCF,EAAAA,EAAAA,YAAU,eAArCG,EAAS,KAAEC,EAAY,KAC9B,GAA4CJ,EAAAA,EAAAA,WAAS,GAAM,eAApDK,EAAc,KAAEC,EAAiB,KAClCC,GAAqBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMR,MAAMS,SAAS,IAqBvE,OAJAC,EAAAA,EAAAA,YAAU,WACNC,SAASC,iBAAiB,oBAAoB,kBAAMC,QAAQC,IAAI,oBAAoB,GACxF,KAGI,gBAAKC,UAAWT,EAAqB,eAAiB,iCAAiC,UACnF,iBAAKS,UAAU,iBAAgB,WAE3B,kBAAMC,SAtBG,SAACC,GAClBA,EAAEC,iBACF,IAAIC,EAAU,IAAIC,KAEdC,EADY,IAAID,KAAKlB,GACJoB,UAAYH,EAAQG,UAEzCzB,GAAS0B,EAAAA,EAAAA,IAAY,CAACC,SAAUxB,EAAOyB,QAASC,KAAKC,KAAKN,EAAI,SAClE,EAe0CN,UAAU,OAAM,WAG1C,iBAAKA,UAAU,aAAY,WACvB,2BAAO,WACP,kBAAOa,KAAK,SAASC,SAAU,SAACZ,GAAC,OAAKhB,EAASgB,EAAEa,OAAOC,MAAM,QAIlE,iBAAKhB,UAAU,8BAA6B,WACxC,2BAAO,oBACP,kBAAOa,KAAK,WAAWC,SAvBd,SAACG,GAC1B3B,EAAkB2B,EAAMF,OAAOG,QACnC,EAqB2EA,QAAS7B,QAIpE,iBAAKW,UAAWX,EAAiB,6BAA+B,kBAAkB,WAC9E,2BAAO,oBACP,kBAAOwB,KAAK,OAAOC,SAAU,SAACZ,GAAC,OAAKd,EAAac,EAAEa,OAAOC,MAAM,QAGpE,mBAAQH,KAAK,SAASb,UAAU,aAAY,SAAC,eAGjD,mBAAQmB,QAAS,kBAAMrC,GAASsC,EAAAA,EAAAA,MAAY,EAAEpB,UAAU,aAAY,SAAC,mBAIrF,C","sources":["Components/LimitForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// Redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeLimit, closeForm } from \"../Redux/limitSlice\";\r\n\r\nfunction LimitForm() {\r\n    const dispatch = useDispatch();\r\n    const [limit, setLimit] = useState(0);\r\n    const [timeLimit, setTimeLimit] = useState();\r\n    const [timeLimitCheck, setTimeLimitCheck] = useState(false);\r\n    const isLimitFormStarted = useSelector((state) => state.limit.limitForm);\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let present = new Date();\r\n        let limitDate = new Date(timeLimit);\r\n        let diff = limitDate.getTime() - present.getTime();\r\n\r\n        dispatch(changeLimit({newLimit: limit, newDate: Math.ceil(diff / (1000 * 60 * 60 * 24))}));\r\n    }\r\n\r\n\r\n    const handleCheckboxChange = (event) => {\r\n        setTimeLimitCheck(event.target.checked)\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('DOMContentLoaded', () => console.log('Limit form loaded'));\r\n    })\r\n\r\n    return (\r\n        <div className={isLimitFormStarted ? \"form-wrapper\" : \"form-wrapper form-wrapper-show\"}>\r\n            <div className='form-container'>\r\n\r\n                <form onSubmit={handleSubmit} className=\"form\">\r\n\r\n                    {/* ======================= Form Group ======================= */}\r\n                    <div className='form-group'>\r\n                        <label>Limit</label>\r\n                        <input type=\"number\" onChange={(e) => setLimit(e.target.value)} />\r\n                    </div>\r\n\r\n                    {/* ======================= Form Group ======================= */}\r\n                    <div className='form-group form-group-check'>\r\n                        <label>Set Time Limit</label>\r\n                        <input type=\"checkbox\" onChange={handleCheckboxChange} checked={timeLimitCheck} />\r\n                    </div>\r\n\r\n                    {/* ======================= Form Group ======================= */}\r\n                    <div className={timeLimitCheck ? \"form group show-date-field\" : \"hide-date-field\"}>\r\n                        <label>Set Time Limit</label>\r\n                        <input type=\"date\" onChange={(e) => setTimeLimit(e.target.value)} />\r\n                    </div>\r\n\r\n                    <button type='submit' className='submit-btn'>Submit</button>\r\n                </form>\r\n\r\n                <button onClick={() => dispatch(closeForm())} className=\"close-form\">Close form</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LimitForm;"],"names":["dispatch","useDispatch","useState","limit","setLimit","timeLimit","setTimeLimit","timeLimitCheck","setTimeLimitCheck","isLimitFormStarted","useSelector","state","limitForm","useEffect","document","addEventListener","console","log","className","onSubmit","e","preventDefault","present","Date","diff","getTime","changeLimit","newLimit","newDate","Math","ceil","type","onChange","target","value","event","checked","onClick","closeForm"],"sourceRoot":""}