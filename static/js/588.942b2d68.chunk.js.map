{"version":3,"file":"static/js/588.942b2d68.chunk.js","mappings":"oMAsFA,UAhFA,WACI,IAAMA,GAAWC,EAAAA,EAAAA,MAGXC,GAAeC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUC,aAAa,IACnEC,GAAqBJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMI,aAAaC,OAAO,IAG5E,GAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KACpB,GAAwBF,EAAAA,EAAAA,UAAS,IAAG,eAA7BG,EAAI,KAAEC,EAAO,KACpB,GAA0BJ,EAAAA,EAAAA,YAAU,eAA7BK,EAAK,KAAEC,EAAQ,KACtB,GAAwBN,EAAAA,EAAAA,UAAS,IAAG,eAA7BO,EAAI,KAAEC,EAAO,KAwBpB,OACI,gBAAKC,UAAWjB,EAAe,eAAiB,iCAAiC,UAC7E,iBAAKiB,UAAU,iBAAgB,WAE3B,kBAAMC,SAxBG,SAACC,GAClBA,EAAEC,iBAEF,IAAMC,EAAO,IAAIC,KAEbC,EAAa,CACbC,GAFcnB,EAAmBA,EAAmBoB,OAAS,GAAGD,GAE9C,EAClBf,KAAMA,EACNE,KAAMA,EACNE,MAAOA,EACNE,KAAMA,EACPW,WAAW,GAAD,OAAKL,EAAKM,cAAa,YAAIN,EAAKO,UAAS,YAAIP,EAAKQ,WAGhE/B,GAASgC,EAAAA,EAAAA,IAAW,CAACC,WAAYR,KACjCzB,GAASkC,EAAAA,EAAAA,MACb,EAQ0Cf,UAAU,OAAM,WAG1C,iBAAKA,UAAU,aAAY,WACvB,2BAAO,UACP,kBAAOF,KAAK,OAAOkB,SAAU,SAACd,GAAC,OAAKT,EAAQS,EAAEe,OAAOC,MAAM,QAI/D,iBAAKlB,UAAU,aAAY,WACvB,2BAAO,iBACP,qBAAUgB,SAAU,SAACd,GAAC,OAAKP,EAAQO,EAAEe,OAAOC,MAAM,QAItD,iBAAKlB,UAAU,aAAY,WACvB,2BAAO,iBACP,kBAAOF,KAAK,SAASkB,SAAU,SAACd,GAAC,OAAKL,EAASK,EAAEe,OAAOC,MAAM,QAIlE,iBAAKlB,UAAU,aAAY,WACvB,2BAAO,sBACP,oBAAQgB,SAAU,SAACd,GAAC,OAAKH,EAAQG,EAAEe,OAAOC,MAAM,EAAC,WAC7C,mBAAQA,MAAM,KAAI,SAAC,UACnB,mBAAQA,MAAM,KAAI,SAAC,UACnB,mBAAQA,MAAM,KAAI,SAAC,UACnB,mBAAQA,MAAM,KAAI,SAAC,eACnB,mBAAQA,MAAM,KAAI,SAAC,yBAI3B,mBAAQpB,KAAK,SAASE,UAAU,aAAY,SAAC,eAGjD,mBAAQmB,QAAS,kBAAMtC,GAASkC,EAAAA,EAAAA,MAAmB,EAAEf,UAAU,aAAY,SAAC,cAI5F,C","sources":["Components/CreateForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n// Redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createData } from \"../Redux/expenditureSlice\";\r\nimport { closeAddItemForm } from \"../Redux/globalVarSlice\";\r\n\r\nfunction Form() {\r\n    const dispatch = useDispatch();\r\n\r\n    // ================== Redux state.\r\n    const isAddStarted = useSelector((state) => state.globalVar.addFormOpened);\r\n    const lastElementInState = useSelector((state) => state.expenditures.expData); // Get the id of the last element and add 1, used for when creating a new element.\r\n\r\n    // ================== Local state.\r\n    const [name, setName] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [spent, setSpent] = useState();\r\n    const [type, setType] = useState(\"\");\r\n\r\n\r\n    // ================== Handle form submit.\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const date = new Date();\r\n        let lastIDValue = lastElementInState[lastElementInState.length - 1].id;\r\n        let objectData = {\r\n            id: lastIDValue + 1,\r\n            name: name,\r\n            desc: desc,\r\n            spent: spent,\r\n             type: type,\r\n            created_at: `${date.getFullYear()}-${date.getDate()}-${date.getDay()}`\r\n        }\r\n\r\n        dispatch(createData({newElement: objectData}));\r\n        dispatch(closeAddItemForm());\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <div className={isAddStarted ? \"form-wrapper\" : \"form-wrapper form-wrapper-show\"}>\r\n            <div className='form-container'>\r\n                {/* ======================= Form ======================= */}\r\n                <form onSubmit={handleSubmit} className=\"form\">\r\n\r\n                    {/* ======================= Form Group ======================= */}\r\n                    <div className='form-group'>\r\n                        <label>Name</label>\r\n                        <input type=\"text\" onChange={(e) => setName(e.target.value)} />\r\n                    </div>\r\n\r\n                    {/* ======================= Form Group ======================= */}\r\n                    <div className='form-group'>\r\n                        <label>Description</label>\r\n                        <textarea onChange={(e) => setDesc(e.target.value)}></textarea>\r\n                    </div>\r\n\r\n                    {/* ======================= Form Group ======================= */}\r\n                    <div className='form-group'>\r\n                        <label>Total spent</label>\r\n                        <input type=\"number\" onChange={(e) => setSpent(e.target.value)} />\r\n                    </div>\r\n\r\n                    {/* ======================= Form Group ======================= */}\r\n                    <div className='form-group'>\r\n                        <label>Expenditure type</label>\r\n                        <select onChange={(e) => setType(e.target.value)} >\r\n                            <option value=\"HM\">Home</option>\r\n                            <option value=\"BL\">Bill</option>\r\n                            <option value=\"FD\">Food</option>\r\n                            <option value=\"TR\">Transport</option>\r\n                            <option value=\"MC\">Miscellaneous</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className='submit-btn'>Submit</button>\r\n                </form>\r\n\r\n                <button onClick={() => dispatch(closeAddItemForm())} className=\"close-form\">Close</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;"],"names":["dispatch","useDispatch","isAddStarted","useSelector","state","globalVar","addFormOpened","lastElementInState","expenditures","expData","useState","name","setName","desc","setDesc","spent","setSpent","type","setType","className","onSubmit","e","preventDefault","date","Date","objectData","id","length","created_at","getFullYear","getDate","getDay","createData","newElement","closeAddItemForm","onChange","target","value","onClick"],"sourceRoot":""}