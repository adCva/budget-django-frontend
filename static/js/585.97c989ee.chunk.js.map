{"version":3,"file":"static/js/585.97c989ee.chunk.js","mappings":"oMA6FA,UAvFA,WACI,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,KAAKC,OAAO,IACxDC,GAAgBJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,KAAKG,cAAc,IAGtE,GAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KACpB,GAAwBF,EAAAA,EAAAA,UAAS,IAAG,eAA7BG,EAAI,KAAEC,EAAO,KACpB,GAA0BJ,EAAAA,EAAAA,YAAU,eAA7BK,EAAK,KAAEC,EAAQ,KACtB,GAAwBN,EAAAA,EAAAA,UAAS,IAAG,eAA7BO,EAAI,KAAEC,EAAO,KA+BpB,OARAC,EAAAA,EAAAA,YAAU,WACNP,EAAQT,EAAaQ,MACrBG,EAAQX,EAAaU,MACrBG,EAASb,EAAaY,OACtBG,EAAQf,EAAac,KACzB,GAAG,CAACT,KAIA,gBAAKY,UAAWZ,EAAgB,eAAiB,iCAAiC,UAC9E,iBAAKY,UAAU,iBAAgB,WAG3B,kBAAMC,SA/BG,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAId,GACZa,QAAQC,IAAItB,EAAaQ,MAEzB,IAAIe,EAAY,CACZC,GAAIxB,EAAawB,GACjBhB,KAAMA,EACNE,KAAMA,EACNE,MAAOA,EACPE,KAAMA,EACNW,WAAYzB,EAAayB,YAG7B3B,GAAS4B,EAAAA,EAAAA,IAAW,CAACC,gBAAiBJ,KACtCzB,GAAS8B,EAAAA,EAAAA,MACb,EAe0CX,UAAU,OAAM,WAG1C,iBAAKA,UAAU,aAAY,WACvB,2BAAO,UACP,kBAAOH,KAAK,OAAOe,SAAU,SAACV,GAAC,OAAKV,EAAQU,EAAEW,OAAOC,MAAM,EAAEC,aAAcxB,QAI/E,iBAAKS,UAAU,aAAY,WACvB,2BAAO,iBACP,qBAAUY,SAAU,SAACV,GAAC,OAAKR,EAAQQ,EAAEW,OAAOC,MAAM,EAAEC,aAActB,QAItE,iBAAKO,UAAU,aAAY,WACvB,2BAAO,iBACP,kBAAOH,KAAK,SAASe,SAAU,SAACV,GAAC,OAAKN,EAASM,EAAEW,OAAOC,MAAM,EAAEC,aAAcpB,QAIlF,iBAAKK,UAAU,aAAY,WACvB,2BAAO,sBACP,oBAAQY,SAAU,SAACV,GAAC,OAAKJ,EAAQI,EAAEW,OAAOC,MAAM,EAAEA,MAAOjB,EAAK,WAC1D,mBAAQiB,MAAM,KAAI,SAAC,UACnB,mBAAQA,MAAM,KAAI,SAAC,UACnB,mBAAQA,MAAM,KAAI,SAAC,UACnB,mBAAQA,MAAM,KAAI,SAAC,eACnB,mBAAQA,MAAM,KAAI,SAAC,yBAI3B,mBAAQjB,KAAK,SAASG,UAAU,aAAY,SAAC,eAIjD,mBAAQgB,QAAS,kBAAMnC,GAAS8B,EAAAA,EAAAA,MAAY,EAAEX,UAAU,aAAY,SAAC,mBAIrF,C","sources":["Components/EditForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// Redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateData } from \"../Redux/expenditureSlice\";\r\nimport { closeEdit } from \"../Redux/editSlice\";\r\n\r\nfunction EditForm() {\r\n    const dispatch = useDispatch();\r\n    const editItemData = useSelector((state) => state.edit.editExp);\r\n    const isEditStarted = useSelector((state) => state.edit.editFormOpened);\r\n\r\n    // ================== Local state.\r\n    const [name, setName] = useState(\"\");\r\n    const [desc, setDesc] = useState('');\r\n    const [spent, setSpent] = useState();\r\n    const [type, setType] = useState('');\r\n\r\n\r\n\r\n    // ================== Handle form submit.\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(name)\r\n        console.log(editItemData.name)\r\n\r\n        let updatedEl = {\r\n            id: editItemData.id, \r\n            name: name,\r\n            desc: desc,\r\n            spent: spent,\r\n            type: type,\r\n            created_at: editItemData.created_at\r\n        }\r\n\r\n        dispatch(updateData({updatedElelemnt: updatedEl}));\r\n        dispatch(closeEdit());\r\n    };\r\n\r\n    useEffect(() => {\r\n        setName(editItemData.name);\r\n        setDesc(editItemData.desc);\r\n        setSpent(editItemData.spent);\r\n        setType(editItemData.type);\r\n    }, [isEditStarted])\r\n\r\n    \r\n    return (\r\n        <div className={isEditStarted ? \"form-wrapper\" : \"form-wrapper form-wrapper-show\"}>\r\n            <div className='form-container'>\r\n\r\n                {/* ======================= Form ======================= */}\r\n                <form onSubmit={handleSubmit} className=\"form\">\r\n\r\n                    {/* ======================= Form Group ======================= */}\r\n                    <div className='form-group'>\r\n                        <label>Name</label>\r\n                        <input type=\"text\" onChange={(e) => setName(e.target.value)} defaultValue={name} />\r\n                    </div>\r\n\r\n                    {/* ======================= Form Group ======================= */}\r\n                    <div className='form-group'>\r\n                        <label>Description</label>\r\n                        <textarea onChange={(e) => setDesc(e.target.value)} defaultValue={desc}></textarea>\r\n                    </div>\r\n\r\n                    {/* ======================= Form Group ======================= */}\r\n                    <div className='form-group'>\r\n                        <label>Total spent</label>\r\n                        <input type=\"number\" onChange={(e) => setSpent(e.target.value)} defaultValue={spent} />\r\n                    </div>\r\n\r\n                    {/* ======================= Form Group ======================= */}\r\n                    <div className='form-group'>\r\n                        <label>Expenditure type</label>\r\n                        <select onChange={(e) => setType(e.target.value)} value={type}>\r\n                            <option value=\"HM\">Home</option>\r\n                            <option value=\"BL\">Bill</option>\r\n                            <option value=\"FD\">Food</option>\r\n                            <option value=\"TR\">Transport</option>\r\n                            <option value=\"MC\">Miscellaneous</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className='update-btn'>Update</button>\r\n\r\n                </form>\r\n\r\n                <button onClick={() => dispatch(closeEdit())} className=\"close-form\">Close form</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditForm;"],"names":["dispatch","useDispatch","editItemData","useSelector","state","edit","editExp","isEditStarted","editFormOpened","useState","name","setName","desc","setDesc","spent","setSpent","type","setType","useEffect","className","onSubmit","e","preventDefault","console","log","updatedEl","id","created_at","updateData","updatedElelemnt","closeEdit","onChange","target","value","defaultValue","onClick"],"sourceRoot":""}